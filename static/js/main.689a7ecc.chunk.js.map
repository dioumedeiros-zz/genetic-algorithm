{"version":3,"sources":["api/controller/CityController.js","components/Header/index.js","components/City/index.js","components/CityList/index.js","components/Modal/index.js","api/services/GeneticAlgorithim.js","pages/Home/index.js","App.js","index.js"],"names":["idList","CityController","city","cityList","JSON","parse","localStorage","getItem","index","length","newCity","id","name","setItem","stringify","cityRoutes","currentFiltered","find","c","current","distance","newDistancies","filter","d","destiny","newMerge","distancesMerge","time","newCities","data","Header","className","City","addDistance","useState","setTime","useEffect","filteredTime","type","maxLength","value","onChange","e","Number","target","console","log","onBlur","require","CityList","routes","setRoutes","currentCity","setCurrentCity","handleDistance","update","cities","newRoutes","map","route","key","Modal","open","close","modal","closeOnDocumentClick","onClose","chromosome","item","allDistance","generation","onClick","GeneticAlgorithim","this","MUTATION","POPULATION_SIZE","GENERATIONS","best","Math","ceil","random","splice","destinyCity","f","subject","totDistance","initialCity","forEach","chromo","getDistance","population","superPopulation","betters","floor","sortPopulation","push","firstGene","secondGene","randomGene","crossingGenes","validateDuplicity","wait","crossingList","duplicated","getDuplicated","includes","g","chromosomeList","min","max","waiting","sort","a","b","bestWay","createChromosome","element","fitness","i","anotherPopulation","firstParent","selection","secondParent","childs","crossover","transform","getBestDistance","List","setCity","selectList","setSelectList","setSelection","solution","setSolution","setOpen","setGeneration","loadCities","setTimeout","document","querySelector","selectedIndex","String","placeholder","store","toast","error","size","color","citySelected","delete","dist","isValid","bestRoute","initialize","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.689a7ecc.chunk.js","sourcesContent":["const idList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n\nclass CityController {\n  store(city) {\n    let cityList = JSON.parse(localStorage.getItem(\"cities\"));\n    const index = cityList ? cityList.length : 0;\n    const newCity = {\n      id: idList[index],\n      name: city,\n    };\n\n    cityList = cityList ? [...cityList, newCity] : [newCity];\n\n    localStorage.setItem(\"cities\", JSON.stringify(cityList));\n  }\n\n  update(cityRoutes) {\n    const cityList = JSON.parse(localStorage.getItem(\"cities\"));\n    let currentFiltered = cityList.find((c) => c.id === cityRoutes.current.id);\n\n    if (currentFiltered.distance) {\n      let newDistancies = currentFiltered.distance.filter(\n        (d) => d.id !== cityRoutes.destiny.id\n      );\n      currentFiltered.distance = [...newDistancies, cityRoutes.destiny];\n\n      let newMerge = cityList.find((c) => c.id === cityRoutes.destiny.id);\n\n      if (newMerge.distance) {\n        let distancesMerge = newMerge.distance.filter(\n          (d) => d.id !== currentFiltered.id\n        );\n\n        newMerge.distance = [\n          ...distancesMerge,\n          { id: currentFiltered.id, time: cityRoutes.destiny.time },\n        ];\n      } else {\n        newMerge.distance = [];\n        newMerge.distance = [\n          ...newMerge.distance,\n          { id: currentFiltered.id, time: cityRoutes.destiny.time },\n        ];\n      }\n    } else {\n      currentFiltered.distance = [];\n      currentFiltered.distance = [\n        ...currentFiltered.distance,\n        cityRoutes.destiny,\n      ];\n\n      let newMerge = cityList.find((c) => c.id === cityRoutes.destiny.id);\n\n      newMerge.distance = [];\n      newMerge.distance = [\n        ...newMerge.distance,\n        { id: currentFiltered.id, time: cityRoutes.destiny.time },\n      ];\n    }\n\n    let newCities = cityList.filter((c) => c.id !== currentFiltered.id);\n    newCities = [...newCities, currentFiltered];\n\n    localStorage.setItem(\"cities\", JSON.stringify(newCities));\n  }\n\n  delete(data) {\n    const cityList = JSON.parse(localStorage.getItem(\"cities\"));\n\n    let newCities = cityList.filter((c) => c.id !== data.id);\n    for (const city of newCities) {\n      if (city.name === data.name);\n      city.distance = city.distance.filter((c) => c.id !== data.id);\n    }\n\n    localStorage.setItem(\"cities\", JSON.stringify(newCities));\n  }\n}\n\nexport default CityController;\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"container-header\">\n      <div className=\"content-header\">\n        <nav>\n          <div>Algoritmo Genético</div>\n          <p>Problema do caixeiro viajante</p>\n        </nav>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport default function City({ current, destiny, addDistance }) {\n  const [time, setTime] = useState(\"\");\n\n  useEffect(() => {\n    if (current.distance) {\n      const filteredTime = current.distance.find((c) => c.id === destiny.id);\n      if (filteredTime) {\n        setTime(filteredTime.time);\n      } else {\n        setTime(\"\");\n      }\n    }\n  }, [current, destiny]);\n\n  function handleTime(e) {\n    if (Number(e.target.value)) {\n      console.log(Number(e.target.value));\n      setTime(e.target.value);\n    } else {\n      setTime(0);\n    }\n  }\n\n  return (\n    <>\n      <div>{current && current.name}</div>\n      <div>{destiny && destiny.name}</div>\n      <input\n        type=\"text\"\n        maxLength=\"3\"\n        value={time}\n        onChange={handleTime}\n        onBlur={() =>\n          addDistance({ current, destiny: { id: destiny.id, time } })\n        }\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport City from \"../City\";\n\nimport \"./styles.css\";\n\nconst CityController = require(\"../../api/controller/CityController\");\n\nexport default function CityList({ filter }) {\n  const [routes, setRoutes] = useState([]);\n  const [currentCity, setCurrentCity] = useState({});\n\n  useEffect(() => {\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\n\n    if (cities) {\n      const newRoutes = cities.filter((city) => city.id !== filter);\n      setRoutes(newRoutes);\n      const current = cities.find((city) => city.id === filter);\n      setCurrentCity(current);\n    }\n  }, [filter]);\n\n  function handleDistance(data) {\n    new CityController().update(data);\n  }\n\n  return (\n    <div className=\"grid\">\n      <div className=\"header\">\n        <div>Origem</div>\n        <div>Destino</div>\n        <div>Distância</div>\n      </div>\n      <div className=\"items\">\n        {routes &&\n          routes.map((route) => (\n            <City\n              key={route.id}\n              current={currentCity}\n              destiny={route}\n              addDistance={handleDistance}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport { MdKeyboardArrowRight } from \"react-icons/md\";\n\nimport \"./styles.css\";\n\nexport default function Modal({ open, data, close }) {\n  return (\n    <Popup open={open} modal closeOnDocumentClick onClose={close}>\n      {(close) => (\n        <div className=\"modal\">\n          <header>\n            <span>Melhor caminho</span>\n          </header>\n          <ul>\n            {data.chromosome.map((item) => (\n              <div key={item.id}>\n                <li>{item.name}</li>\n                <MdKeyboardArrowRight />\n              </div>\n            ))}\n            <li className=\"last\">{data.chromosome[0].name}</li>\n          </ul>\n          <hr />\n          <div className=\"grid-modal\">\n            <span className=\"title\">Distância</span>\n            <span className=\"value\">{data.allDistance}</span>\n            <span className=\"title\">Gerações</span>\n            <span className=\"value\">{data.generation}</span>\n          </div>\n          <div className=\"control\">\n            <button className=\"close\" onClick={close}>\n              Confirmar\n            </button>\n          </div>\n        </div>\n      )}\n    </Popup>\n  );\n}\n","class GeneticAlgorithim {\n  constructor(cities, generation) {\n    this.cities = cities;\n    this.MUTATION = 2;\n    this.POPULATION_SIZE = 20;\n    this.GENERATIONS = generation;\n    this.best = [];\n  }\n\n  createChromosome(data) {\n    let chromosome = [];\n    let cityList = [...data];\n    while (cityList.length > 0) {\n      const index = Math.ceil(Math.random() * cityList.length - 1);\n      chromosome = [...chromosome, cityList[index]];\n      cityList.splice(index, 1);\n    }\n    return chromosome;\n  }\n\n  getDistance(currentCity, destinyCity) {\n    const found = this.cities.find((city) => city.id === currentCity.id);\n    const distance = found.distance.find((f) => f.id === destinyCity.id);\n\n    return distance ? Number(distance.time) : 0;\n  }\n\n  fitness(subject) {\n    let currentCity = subject.chromosome[0];\n    let totDistance = 0;\n\n    const initialCity = currentCity;\n    subject.chromosome.forEach((chromo) => {\n      let destiny = chromo;\n\n      let distance = this.getDistance(currentCity, destiny);\n      totDistance += distance;\n\n      currentCity = destiny;\n    });\n\n    totDistance += this.getDistance(currentCity, initialCity);\n\n    subject.allDistance = totDistance;\n  }\n\n  selection(population) {\n    let superPopulation = [];\n\n    const betters = Math.floor(population.length / 2);\n    this.sortPopulation(population);\n    for (let index = 0; index < betters; index++) {\n      superPopulation.push(population[index]);\n    }\n\n    const randomChoise = Math.floor(Math.random() * betters);\n    return superPopulation[randomChoise];\n  }\n\n  crossover(firstGene, secondGene) {\n    let randomGene = Math.ceil(Math.random() * firstGene.length - 1);\n    this.crossingGenes(firstGene, secondGene, randomGene);\n    this.validateDuplicity(randomGene, firstGene, secondGene);\n\n    return [{ chromosome: firstGene }, { chromosome: secondGene }];\n  }\n\n  crossingGenes(firstGene, secondGene, randomGene) {\n    let wait = firstGene[randomGene];\n    firstGene[randomGene] = secondGene[randomGene];\n    secondGene[randomGene] = wait;\n  }\n\n  validateDuplicity(randomGene, firstGene, secondGene) {\n    let crossingList = [];\n    crossingList.push(randomGene);\n    while (true) {\n      let duplicated = this.getDuplicated(firstGene, crossingList);\n      if (duplicated === -1) {\n        break;\n      }\n      this.crossingGenes(firstGene, secondGene, duplicated);\n      crossingList.push(duplicated);\n    }\n  }\n\n  getDuplicated(firstGene, crossingList) {\n    for (let index = 0; index < firstGene.length; index++) {\n      if (crossingList.includes(index)) continue;\n\n      if (firstGene.filter((g) => g.id === firstGene[index].id).length > 1) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  transform(chromosomeList) {\n    const min = Math.ceil(1);\n    const max = Math.floor(100);\n    const rand = Math.floor(Math.random() * (max - min));\n    if (rand <= this.MUTATION) {\n      const firstGene = Math.ceil(Math.random() * chromosomeList.length - 1);\n      const secondGene = Math.ceil(Math.random() * chromosomeList.length - 1);\n      const waiting = chromosomeList[firstGene];\n      chromosomeList[firstGene] = chromosomeList[secondGene];\n      chromosomeList[secondGene] = waiting;\n    }\n    return { chromosome: chromosomeList };\n  }\n\n  sortPopulation(population) {\n    return population.sort((a, b) =>\n      a.allDistance < b.allDistance ? -1 : a.allDistance > b.allDistance ? 1 : 0\n    );\n  }\n\n  getBestDistance(bestWay) {\n    if (bestWay.allDistance < this.best.allDistance) {\n      bestWay.generation = this.GENERATIONS;\n      this.best = bestWay;\n    }\n  }\n\n  initialize() {\n    let population = [];\n    let subject;\n    while (population.length < this.POPULATION_SIZE) {\n      subject = {\n        chromosome: this.createChromosome(this.cities),\n        generation: 1,\n      };\n      population.push(subject);\n    }\n\n    population.forEach((element) => {\n      this.fitness(element);\n    });\n\n    this.best = population[0];\n\n    this.sortPopulation(population);\n    for (let i = 1; i <= this.GENERATIONS; i++) {\n      let anotherPopulation = [];\n      for (let index = 0; index < this.POPULATION_SIZE; index += 2) {\n        //Seleção\n        let firstParent = this.selection(population);\n        let secondParent = this.selection(population);\n\n        let childs = this.crossover(\n          firstParent.chromosome,\n          secondParent.chromosome\n        );\n\n        anotherPopulation = [\n          ...anotherPopulation,\n          this.transform(childs[0].chromosome),\n        ];\n        anotherPopulation = [\n          ...anotherPopulation,\n          this.transform(childs[1].chromosome),\n        ];\n      }\n\n      population = [];\n      population = anotherPopulation;\n\n      population.forEach((element) => {\n        this.fitness(element);\n      });\n\n      this.sortPopulation(population);\n      let bestWay = population[0];\n\n      this.getBestDistance(bestWay);\n    }\n\n    return this.best;\n  }\n}\n\nexport default GeneticAlgorithim;\n","import React, { useEffect, useState } from \"react\";\nimport { MdAdd, MdDeleteForever } from \"react-icons/md\";\nimport { toast } from \"react-toastify\";\n\nimport Header from \"../../components/Header\";\nimport CityList from \"../../components/CityList\";\nimport Modal from \"../../components/Modal\";\nimport \"./styles.css\";\n\nimport CityController from \"../../api/controller/CityController\";\nimport GeneticAlgorithim from \"../../api/services/GeneticAlgorithim\";\n\nexport default function List() {\n  const [city, setCity] = useState(\"\");\n  const [selectList, setSelectList] = useState([]);\n  const [selection, setSelection] = useState(\"A\");\n  const [solution, setSolution] = useState();\n  const [open, setOpen] = useState(false);\n  const [generation, setGeneration] = useState(1000);\n\n  useEffect(() => {\n    loadCities();\n  }, []);\n\n  function handleAddCity() {\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\n    if (!cities || cities.length < 10) {\n      new CityController().store(city);\n      loadCities();\n      setCity(\"\");\n    } else {\n      toast.error(\"No máximo 10 cidades\");\n    }\n  }\n\n  function loadCities() {\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\n\n    if (cities) {\n      setSelectList(cities);\n      const index = cities.length - 1;\n      setSelection(cities[index].id);\n      setTimeout(() => {\n        document.querySelector(\".select\").selectedIndex = String(index);\n      }, 100);\n    }\n  }\n\n  function handleExecute() {\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\n\n    if (isValid(cities)) {\n      const algorithm = new GeneticAlgorithim(cities, generation); //new GeneticAlgorithim.init(cities, generation);\n\n      const bestRoute = algorithm.initialize();\n      if (bestRoute) {\n        setSolution(bestRoute);\n        setOpen(true);\n      }\n    }\n  }\n\n  function isValid(cities) {\n    for (const city of cities) {\n      if (!city.distance) {\n        toast.error(\n          `Distância inválida. Verifique os destinos da cidade ${city.name}`\n        );\n        return false;\n      }\n      city.distance.forEach((dist) => {\n        if (!dist.time) {\n          toast.error(\n            `Distância inválida. Verifique os destinos da cidade ${city.name}`\n          );\n          return false;\n        }\n      });\n    }\n    return true;\n  }\n\n  function handleDelete() {\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\n    const citySelected = cities.find((c) => c.id === selection);\n    new CityController().delete(citySelected);\n    loadCities();\n  }\n\n  function handleCloseModal() {\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <div className=\"register\">\n          <input\n            placeholder=\"Insira uma cidade\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          />\n          <button onClick={handleAddCity}>\n            <MdAdd size={25} />\n            CADASTRAR\n          </button>\n        </div>\n        <div className=\"content\">\n          <div className=\"controls\">\n            <div className=\"city-selected\">\n              <select\n                className=\"select\"\n                onChange={(e) => setSelection(e.target.value)}\n              >\n                {selectList.map((item) => (\n                  <option key={item.id} value={item.id}>\n                    {item.name}\n                  </option>\n                ))}\n              </select>\n              <MdDeleteForever\n                size={28}\n                color=\"#81259d\"\n                onClick={handleDelete}\n              />\n            </div>\n            <div className=\"generation\">\n              <label>Gerações</label>\n              <input\n                placeholder=\"Gerações\"\n                value={generation}\n                onChange={(e) => setGeneration(e.target.value)}\n              />\n            </div>\n          </div>\n          <CityList filter={selection} />\n        </div>\n        <button className=\"btn-execute\" onClick={handleExecute}>\n          EXECUTAR ALGORITMO\n        </button>\n        <Modal open={open} data={solution} close={handleCloseModal} />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Home from \"./pages/Home\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/global.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Home />\n      <ToastContainer autoClose={6000} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}